GAMS 45.1.0  88bbff72 Oct 14, 2023          LEX-LEG x86 64bit/Linux - 01/30/25 14:15:34 Page 1
G e n e r a l   A l g e b r a i c   M o d e l i n g   S y s t e m
C o m p i l a t i o n


   1  *test Modell: freie Mengen in EnergiePark, Kapazit√§t und Arbeit. Preise sind diskret.
   2   
   3   
   4  $include testData.gms
****                      $282
**** 282  Unable to open include file
****         Hint: Does the filename need to be quoted?
   5   
   6   
   7  Parameter
   8  storageCapacity         /100/
   9  ;
  10   
  11   
  12  Positive Variables
  13  StoragePosE(t, st)
****              $120$120
**** 120  Unknown identifier entered as set
  14  StorageNegE(t, st)
  15  StoragePosC(t, so)
****                  $120
**** 120  Unknown identifier entered as set
  16  StorageNegC(t, so)
  17   
  18  StorageLoading(t, st)
  19  StorageLoadingStatus(t, st)
  20  ParkProduction(t, st)
  21  ;
  22   
  23  Variable
  24  StorageRevenue(t)
  25  ParkRevenue(t)
  26  EnergyRevenuePos(t)
  27  EnergyRevenueNeg(t)
  28  CapacityRevenuePos(t)
  29  CapacityRevenueNeg(t)
  30  profit
  31  ;
  32   
  33  Binary Variable
  34  ParkSwitch(t)
  35  StorageSwitch(t)
  36  ;
  37   
  38  Scalar
  39  PowerConnectionCapacity     /100/
  40  ;
  41   
  42  Equations
  43   
  44  *power capacity
  45  capacityConst1(t, st)
  46  capacityConst2(t, st, so)
  47   
  48  *storage
  49  storageManagement1(t, st)
  50  storageManagement2(t, st)
  51   
  52  storageConst1
  53  storageConst2
  54  storageConst3
  55  storageConst4
  56  storageConst5
  57  storageConst6
  58   
  59  *revenues
  60  revenueP(t)
  61  revenueEnergyPos(t)
  62  revenueEnergyNeg(t)
  63  revenueCapacityPos(t)
  64  revenueCapacityNeg(t)
  65  revenue
  66  ;
  67   
  68   
  69  *power capacity
  70  capacityConst1(t, st)..             PowerConnectionCapacity =g= ParkProduction(t, st) + StoragePosE(t, st);
  71  capacityConst2(t, st, so)..         PowerConnectionCapacity =g= ParkProduction(t, st) + StoragePosC(t, so);
  72   
  73  *storage
  74  storageManagement1(t, st)..         StorageLoadingStatus(t, st) =e= StorageLoadingStatus(t-1, st) - StoragePosE(t-1, st) + StorageNegE(t-1, st) + StorageLoading(t-1, st);
  75  storageManagement2(t, st)..         StorageLoadingStatus(t, st) =l= storageCapacity;
  76   
  77  storageConst1(t, st)..              StoragePosE(t, st) =l= storageCapacity;
  78  storageConst2(t, st)..              StorageNegE(t, st) =l= storageCapacity;
  79  storageConst3(t, so)..              StoragePosC(t, so) =l= storageCapacity;
  80  storageConst4(t, so)..              StorageNegC(t, so) =l= storageCapacity;
  81  storageConst5(t, st, so )..         StoragePosE(t, st) =g= StoragePosC(t, so);
  82  storageConst6(t, st, so)..          StorageNegE(t, st) =g= StorageNegC(t, so);
  83   
  84  *revenues
  85  revenueP(t)..                       ParkRevenue(t) =e= sum(st, (ParkProduction(t, st) * regularMarketPrices(t) * (1-ScenarioTwoProp(st))));
****                                                                                                            $140                    $140
**** 140  Unknown symbol
  86  revenueCapacityNeg(t)..             CapacityRevenueNeg(t) =e= sum(so, StorageNegC(t, so) * monthAvgNegC(t) * ScenarioOneFactor(so) * ScenarioOneProp(so));
****                                                                                                        $140                   $140                  $140
**** 140  Unknown symbol
  87  revenueCapacityPos(t)..             CapacityRevenuePos(t) =e=  sum(so, StoragePosC(t, so) * monthAvgPosC(t) * ScenarioOneFactor(so) * ScenarioOneProp(so));
****                                                                                                         $140
**** 140  Unknown symbol
  88  revenueEnergyPos(t)..               EnergyRevenuePos(t) =e= sum(st, (StoragePosE(t, st) * monthAvgPosE(t) * ScenarioTwoFactor(st) * scenarioTwoProp(st) - StorageLoading(t, st) * regularMarketPrices(t)));
****                                                                                                       $140                   $140
**** 140  Unknown symbol
  89  revenueEnergyNeg(t)..               EnergyRevenueNeg(t) =e= sum(st, StorageNegE(t, st) * monthAvgPosE(t) * ScenarioTwoFactor(st) * ScenarioTwoProp(st));
  90   
  91   
  92   
  93  revenue..                           profit =e= sum(t,  ParkRevenue(t)
  94                                                  + EnergyRevenuePos(t) + EnergyRevenueNeg(t)
  95                                                  + CapacityRevenueNeg(t) + CapacityRevenuePos(t));
  96   
  97  model test / all / ;
  98  solve test maximising profit using MIP;
****                                        $257
**** 257  Solve statement not checked because of previous errors

**** 13 ERROR(S)   0 WARNING(S)


COMPILATION TIME     =        0.002 SECONDS      2 MB  45.1.0 88bbff72 LEX-LEG


USER: Course License                                 S241105|0002AO-GEN
      Dresden University of Technology                          DCE3851
      License for teaching and research at degree granting institutions


**** FILE SUMMARY

Input      /home/nox/CloudDrive/Uni/WS24/Research Project/gams/main.gms
Output     /home/nox/CloudDrive/Uni/WS24/Research Project/main.lst

**** USER ERROR(S) ENCOUNTERED
